#!/bin/sh

# plugin by schwerpunkt

MUNINDIR=/var/cache/munin/www # cache directory for skipped munin runs
SKIPMUNINRUN=12 # amount of muninruns that should skip the zpool command (reading from cache)
# TODO put this in munin config


# If skipmuninrun is greater than 1
# a sort of caching is enabled (files are being created in MUNINDIR)
COUNT=0
if [ $SKIPMUNINRUN > 0 ]; then
  if [ -f $MUNINDIR/zfs_composition_count_$1  ]; then
    COUNT=$(cat $MUNINDIR/zfs_composition_count_$1)
  fi
  COUNT=$(expr $COUNT + 1)
  COUNT=$(expr $COUNT % $(expr $SKIPMUNINRUN + 1))
  echo $COUNT > $MUNINDIR/zfs_composition_count_$1
#  cat $MUNINDIR/zfs_composition_count_$1
fi

case $1 in
    autoconf )
      echo no
      exit 0
      ;;
    suggest )
      exit 0
      ;;
    config )
      # get zfs values (all of them at once)
      ZFSVALUES=$(zfs get -Hp usedbydataset,usedbysnapshots -r | grep -v @)
      ZFSNROFVALUES=2

      # get pool names (multigraph for each pool one)
      if [ ! -f $MUNINDIR/zfs_composition_pools ] || [ $COUNT -eq 0 ]; then
        ZPOOLLIST=$(zpool list -H -o name)
	  if [ $SKIPMUNINRUN > 0 ]; then
	    echo $ZPOOLLIST > $MUNINDIR/zfs_composition_pools
	  fi
      else
        ZPOOLLIST=$(cat $MUNINDIR/zfs_composition_pools)
      fi
      for POOL in $ZPOOLLIST; do
        if [ ! -f $MUNINDIR/zfs_composition_run_config_$POOL ] || [ $COUNT -eq 0 ]; then
          # get values for all zfs in pool
          POOLVALUES=$(echo "$ZFSVALUES" | grep -w "^$POOL")
  
	  POOLZFSCOUNT=$(expr $(echo "$POOLVALUES" | wc -l) / $ZFSNROFVALUES)
  
          OUTPUT=""
          for I in $(seq 1 $POOLZFSCOUNT); do
            for J in $(seq 0 $(expr $ZFSNROFVALUES - 1));do
              IDENTIFIERLINE=$(echo "$POOLVALUES" | sed "$(expr $(expr $I \* $ZFSNROFVALUES) - $J)q;d")
              IDENTIFIERORIG="$(echo $IDENTIFIERLINE | awk '{print $1}{print $2}')"
              IDENTIFIERORIG=$(echo $IDENTIFIERORIG)
              IDENTIFIER=$(echo $IDENTIFIERORIG | tr "-" "--")
              IDENTIFIER=$(echo $IDENTIFIER | tr "/" "-")
              IDENTIFIER=$(echo $IDENTIFIER | awk '{print $1$2}')
              OUTPUT="$OUTPUT$IDENTIFIER.label $IDENTIFIERORIG\n"
              if [ $I = 1 ] && [ $J = 0 ]; then
                OUTPUT="$OUTPUT$IDENTIFIER.draw AREA\n"
              else
                OUTPUT="$OUTPUT$IDENTIFIER.draw STACK\n"
              fi
#TODO change color
              COLORNR=$(expr $(expr $I - 1) % 20)
              OUTPUT="$OUTPUT$IDENTIFIER.colour COLOUR$COLORNR\n"
            done
          done
          if [ $SKIPMUNINRUN > 0 ]; then
            echo $OUTPUT > $MUNINDIR/zfs_composition_run_config_$POOL
          fi
        else # read from cache
          OUTPUT=$(cat $MUNINDIR/zfs_composition_run_config_$POOL)
          OUTPUT="$OUTPUT\n"
        fi



        echo <<EOF "multigraph zfs_composition_$POOL
graph_title zpool $POOL composition in percent
graph_vlabel %
graph_category filesystem
graph_scale no
graph_args --upper-limit 100 -l 0 -r
${OUTPUT}available.label Available
available.draw STACK
available.info dont know
available.colour 00FF33"
EOF
      done
      exit 0
      ;;
esac

# munin action

# get zfs values (all of them at once)
ZFSVALUES=$(zfs get -Hp usedbydataset,usedbysnapshots -r | grep -v @)
ZFSNROFVALUES=2

# get pool names (multigraph for each pool one)
if [ ! -f $MUNINDIR/zfs_composition_pools ] || [ $COUNT -eq 0 ]; then
  ZPOOLLIST=$(zpool list -H -o name)
  if [ $SKIPMUNINRUN > 0 ]; then                             
    echo $ZPOOLLIST > $MUNINDIR/zfs_composition_pools
  fi                                                         
else
  ZPOOLLIST=$(cat $MUNINDIR/zfs_composition_pools)
fi
for POOL in $ZPOOLLIST; do
  if [ ! -f $MUNINDIR/zfs_composition_run_normal_$POOL ] || [ $COUNT -eq 0 ]; then
    # get values for all zfs in pool
    POOLVALUES=$(echo "$ZFSVALUES" | grep -w "^$POOL")
    # get max available
    POOLMAXAVAILABLE=$(zpool get -Hp size $POOL | awk '{print $3}')
  
    POOLZFSCOUNT=$(expr $(echo "$POOLVALUES" | wc -l) / $ZFSNROFVALUES)
  
    SUM=0
    OUTPUT=""
    for I in $(seq 1 $POOLZFSCOUNT); do
      for J in $(seq 0 $(expr $ZFSNROFVALUES - 1));do
        IDENTIFIERLINE=$(echo "$POOLVALUES" | sed "$(expr $(expr $I \* $ZFSNROFVALUES) - $J)q;d")
        IDENTIFIERORIG="$(echo $IDENTIFIERLINE | awk '{print $1}{print $2}')"
        IDENTIFIERORIG=$(echo $IDENTIFIERORIG)
        IDENTIFIER=$(echo $IDENTIFIERORIG | tr "-" "--")
        IDENTIFIER=$(echo $IDENTIFIER | tr "/" "-")
        IDENTIFIER=$(echo $IDENTIFIER | awk '{print $1$2}')
        VALUE=$(echo $IDENTIFIERLINE | awk '{print $3}')
        VALUE=$(awk -v v1=$VALUE -v v2=$POOLMAXAVAILABLE 'BEGIN {print ((v1/v2)*100)}')
        VALUE=$(printf "%.2f\n" $VALUE)
        SUM=$(awk -v v1=$SUM -v v2=$VALUE 'BEGIN {print v1+v2}')
        OUTPUT="$OUTPUT$IDENTIFIER.value $VALUE\n"
      done
    done
    POOLAVAILABLE=$(awk -v v1=$SUM "BEGIN {print 100-v1}")
    OUTPUT="${OUTPUT}available.value $POOLAVAILABLE"
    if [ $SKIPMUNINRUN > 0 ]; then
      echo $OUTPUT > $MUNINDIR/zfs_composition_run_normal_$POOL
    fi
  else # read from cache
    OUTPUT=$(cat $MUNINDIR/zfs_composition_run_normal_$POOL)
  fi

  echo <<EOF "multigraph zfs_composition_$POOL
${OUTPUT}"
EOF
done

